services:
  postgres:
    image: postgres:15
    container_name: calcom-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-unicorn_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-magical_password}
      POSTGRES_DB: ${POSTGRES_DB:-calendso}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-unicorn_user} -d ${POSTGRES_DB:-calendso}"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - calcom-network

  redis:
    image: redis:7-alpine
    container_name: calcom-redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - calcom-network

  web:
    build:
      context: .
      dockerfile: Dockerfile.web.minimal
      args:
        - NODE_OPTIONS=--max-old-space-size=2048
        - BUILDKIT_STEP_LOG_MAX_SIZE=10000000
    container_name: calcom-web
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
        reservations:
          memory: 1G
          cpus: '1'
    environment:
      - NODE_ENV=production
      - NODE_OPTIONS=--max-old-space-size=1024
      - DATABASE_URL=postgresql://${POSTGRES_USER:-unicorn_user}:${POSTGRES_PASSWORD:-magical_password}@postgres:5432/${POSTGRES_DB:-calendso}
      - NEXTAUTH_SECRET=${NEXTAUTH_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - NEXTAUTH_URL=${NEXTAUTH_URL:-http://localhost:3000}
      - NEXT_PUBLIC_WEBAPP_URL=${NEXT_PUBLIC_WEBAPP_URL:-http://localhost:3000}
      - NEXT_PUBLIC_WEBSITE_URL=${NEXT_PUBLIC_WEBSITE_URL:-http://localhost:3000}
      - REDIS_URL=redis://:${REDIS_PASSWORD:-}@redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - NEXT_PUBLIC_VAPID_PUBLIC_KEY=${NEXT_PUBLIC_VAPID_PUBLIC_KEY}
      - VAPID_PRIVATE_KEY=${VAPID_PRIVATE_KEY}
      - NEXT_PUBLIC_IS_E2E=${NEXT_PUBLIC_IS_E2E:-1}
      - CALCOM_TELEMETRY_DISABLED=${CALCOM_TELEMETRY_DISABLED:-1}
      - TURBO_TELEMETRY_DISABLED=1
      - NEXT_TELEMETRY_DISABLED=1
      - DO_NOT_TRACK=1
      - EMAIL_FROM=${EMAIL_FROM:-noreply@localhost}
      - CRON_API_KEY=${CRON_API_KEY:-}
      - CALENDSO_ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - GOOGLE_LOGIN_ENABLED=${GOOGLE_LOGIN_ENABLED:-true}
      - ORGANIZATIONS_ENABLED=${ORGANIZATIONS_ENABLED:-false}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    networks:
      - calcom-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  calcom-network:
    driver: bridge
