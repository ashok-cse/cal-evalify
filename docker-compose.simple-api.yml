version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: calcom-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: calcom
      POSTGRES_USER: calcom
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-calcom123}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - calcom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U calcom -d calcom"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for session storage and caching
  redis:
    image: redis:7-alpine
    container_name: calcom-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - calcom-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis123}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Cal.com API v1 (Development mode with volume mount)
  calcom-api-v1:
    image: node:20-slim
    container_name: calcom-api-v1
    restart: unless-stopped
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://calcom:${POSTGRES_PASSWORD:-calcom123}@postgres:5432/calcom
      
      # App Configuration
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-super-secret-nextauth-key}
      CALENDSO_ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-32-character-encryption-key}
      
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      
      # API Configuration
      NODE_ENV: development
      PORT: 3003
      
      # VAPID Keys
      NEXT_PUBLIC_VAPID_PUBLIC_KEY: ${NEXT_PUBLIC_VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    ports:
      - "3003:3003"
    networks:
      - calcom-network
    command: >
      sh -c "
        apt-get update && apt-get install -y curl &&
        yarn install &&
        yarn workspace @calcom/prisma generate-schemas &&
        yarn workspace @calcom/api dev
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s

  # Cal.com API v2 (Development mode with volume mount)
  calcom-api-v2:
    image: node:20-alpine
    container_name: calcom-api-v2
    restart: unless-stopped
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      # Database
      DATABASE_URL: postgresql://calcom:${POSTGRES_PASSWORD:-calcom123}@postgres:5432/calcom
      DATABASE_READ_URL: postgresql://calcom:${POSTGRES_PASSWORD:-calcom123}@postgres:5432/calcom
      DATABASE_WRITE_URL: postgresql://calcom:${POSTGRES_PASSWORD:-calcom123}@postgres:5432/calcom
      DATABASE_DIRECT_URL: postgresql://calcom:${POSTGRES_PASSWORD:-calcom123}@postgres:5432/calcom
      
      # App Configuration
      NODE_ENV: development
      API_PORT: 3004
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-super-secret-nextauth-key}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key}
      
      # Redis
      REDIS_URL: redis://:${REDIS_PASSWORD:-redis123}@redis:6379
      
      # VAPID Keys
      NEXT_PUBLIC_VAPID_PUBLIC_KEY: ${NEXT_PUBLIC_VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
      
      # Logging
      LOG_LEVEL: info
      
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/api/v2/node_modules
      - /app/apps/api/v2/dist
    ports:
      - "3004:3004"
    networks:
      - calcom-network
    command: >
      sh -c "
        apk add --no-cache curl &&
        yarn install &&
        yarn workspace @calcom/prisma generate-schemas &&
        yarn workspace @calcom/api-v2 dev:no-docker
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3004/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 180s

  # API Proxy (Simple Node.js proxy)
  calcom-api-proxy:
    image: node:20-alpine
    container_name: calcom-api-proxy
    restart: unless-stopped
    working_dir: /app
    depends_on:
      calcom-api-v1:
        condition: service_healthy
      calcom-api-v2:
        condition: service_healthy
    environment:
      API_V1_URL: http://calcom-api-v1:3003
      API_V2_URL: http://calcom-api-v2:3004
      PORT: 3002
    volumes:
      - ./apps/api:/app
    ports:
      - "3002:3002"
    networks:
      - calcom-network
    command: >
      sh -c "
        apk add --no-cache curl &&
        npm install &&
        node index.docker.js
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Database seeder (runs once and exits)
  db-seed:
    image: node:20-slim
    container_name: calcom-db-seed
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://calcom:${POSTGRES_PASSWORD:-calcom123}@postgres:5432/calcom
    volumes:
      - .:/app
      - /app/node_modules
    networks:
      - calcom-network
    command: >
      sh -c "
        yarn install &&
        yarn workspace @calcom/prisma generate-schemas &&
        yarn workspace @calcom/prisma db-deploy &&
        yarn workspace @calcom/prisma db-seed
      "
    profiles:
      - setup

  # Database administration tool (optional)
  prisma-studio:
    image: node:20-alpine
    container_name: calcom-studio
    restart: unless-stopped
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://calcom:${POSTGRES_PASSWORD:-calcom123}@postgres:5432/calcom
    volumes:
      - .:/app
      - /app/node_modules
    ports:
      - "5555:5555"
    networks:
      - calcom-network
    command: >
      sh -c "
        apk add --no-cache curl &&
        yarn install &&
        yarn workspace @calcom/prisma generate-schemas &&
        yarn workspace @calcom/prisma db-studio
      "
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  calcom-network:
    driver: bridge
